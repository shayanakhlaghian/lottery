{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../app/routes/_index.tsx", "../app/components/nav/Header.tsx", "../app/components/main/Main.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "/**\n * By default, Remix will handle generating the HTTP Response for you.\n * You are free to delete this file if you'd like to, but if you ever want it revealed again, you can run `npx remix reveal` \u2728\n * For more information, see https://remix.run/docs/en/main/file-conventions/entry.server\n */\n\nimport { PassThrough } from \"node:stream\";\nimport type { EntryContext } from \"@remix-run/node\";\nimport { Response } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport isbot from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5_000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return isbot(request.headers.get(\"user-agent\"))\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onAllReady() {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          console.error(error);\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onShellReady() {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          console.error(error);\n          responseStatusCode = 500;\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import type {LinksFunction} from '@remix-run/node';\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from '@remix-run/react';\n\nimport stylesheet from '~/tailwind.css';\n\nexport const links: LinksFunction = () => [\n  {\n    rel: 'preconnect',\n    href: 'href=\"https://fonts.googleapis.com',\n  },\n  {\n    rel: 'preconnect',\n    href: 'https://fonts.gstatic.com',\n    crossOrigin: 'anonymous',\n  },\n  {\n    rel: 'stylesheet',\n    href: 'https://fonts.googleapis.com/css2?family=Oxygen+Mono&display=swap',\n  },\n  {\n    rel: 'stylesheet',\n    href: stylesheet,\n  },\n];\n\nconst App = () => {\n  return (\n    <html lang='en'>\n      <head>\n        <meta charSet='utf-8' />\n        <meta name='viewport' content='width=device-width,initial-scale=1' />\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n};\n\nexport default App;\n", "import type {V2_MetaFunction} from '@remix-run/node';\nimport {useState} from 'react';\n\nimport Header from '~/components/nav/Header';\nimport Main from '~/components/main/Main';\n\nexport const meta: V2_MetaFunction = () => [{title: 'Lottery'}];\n\nconst Index = () => {\n  const [accounts, setAccount] = useState<string[] | null>(null);\n\n  const handleAccounts = (accounts: any) => setAccount(accounts);\n\n  return (\n    <div>\n      <Header accounts={accounts} handleAccounts={handleAccounts} />\n      <Main accounts={accounts} />\n    </div>\n  );\n};\n\nexport default Index;\n", "import type {FC} from 'react';\n\ninterface Props {\n  accounts: string[] | null;\n  handleAccounts: (accounts: string[]) => void;\n}\n\nconst Header: FC<Props> = ({accounts, handleAccounts}) => {\n  const isConnected = Boolean(accounts);\n\n  const handleConnection = async () => {\n    if (window.ethereum !== undefined) {\n      const account = await window.ethereum.request({\n        method: 'eth_requestAccounts',\n      });\n\n      handleAccounts(account);\n    }\n  };\n\n  return (\n    <header className='py-4 px-12 border-2 border-black rounded-sm flex justify-between mb-4'>\n      {/* Heading primary */}\n      <h1 className='text-2xl'>This is Lottery</h1>\n\n      {/* If wallet is connected */}\n      {isConnected && (\n        <p className='text-xl border-b-2 border-black font-bold'>Connected</p>\n      )}\n\n      {/* If wallet is not connected */}\n      {!isConnected && (\n        <button\n          onClick={handleConnection}\n          className='bg-black text-white py-2 px-4 hover:bg-gray-600'\n        >\n          Connect your wallet\n        </button>\n      )}\n    </header>\n  );\n};\n\nexport default Header;\n", "import type {FC, ChangeEvent, FormEvent, MouseEvent} from 'react';\nimport {useEffect, useState} from 'react';\nimport {ethers} from 'ethers';\n\nimport {address, abi} from '~/lib/Lottery.json';\n\ninterface Props {\n  accounts: string[] | null;\n}\n\nconst getContract = async () => {\n  const provider = new ethers.BrowserProvider(window.ethereum);\n  const signer = await provider.getSigner();\n  const contract = new ethers.Contract(address, abi, signer);\n\n  return {\n    provider,\n    signer,\n    contract,\n  };\n};\n\nconst Main: FC<Props> = ({accounts}) => {\n  const isConnected = Boolean(accounts);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [manager, setManager] = useState('');\n  const [balance, setBalance] = useState(0);\n  const [players, setPlayers] = useState(0);\n\n  const [ether, setEther] = useState(0.1);\n  const [isEntering, setIsEntering] = useState(false);\n\n  const [isPicking, setIsPicking] = useState(false);\n\n  useEffect(() => {\n    if (isConnected) {\n      (async () => {\n        setIsLoading(true);\n\n        if (window.ethereum !== undefined) {\n          const {provider, contract: lottery} = await getContract();\n\n          const proOne = lottery.manager();\n          const proTwo = lottery.getPlayers();\n          const proThree = provider.getBalance(await lottery.getAddress());\n          const [manager, players, balance] = await Promise.all([\n            proOne,\n            proTwo,\n            proThree,\n          ]);\n\n          setManager(manager);\n          setPlayers(players.length);\n          setBalance(parseFloat(ethers.formatEther(balance)));\n        }\n\n        setIsLoading(false);\n      })();\n    }\n  }, [isConnected]);\n\n  const handleEtherChange = (e: ChangeEvent<HTMLInputElement>) =>\n    setEther(parseFloat(e.target.value));\n\n  const handleEnter = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    setIsEntering(true);\n\n    const {contract: lottery} = await getContract();\n\n    lottery\n      .enter({\n        value: ethers.parseEther(ether.toString()),\n      })\n      .catch((err) => console.log('Error', err))\n      .finally(() => setIsEntering(false));\n  };\n\n  const handlePickWinner = async (\n    e: MouseEvent<HTMLButtonElement, globalThis.MouseEvent>\n  ) => {\n    setIsPicking(true);\n\n    const {contract: lottery} = await getContract();\n\n    lottery\n      .pickWinner()\n      .catch((err) => console.log('Error', err))\n      .finally(() => setIsPicking(false));\n  };\n\n  if (!isConnected)\n    return (\n      <main className='border-2 border-black rounded-sm p-8 min-h-[85vh] flex justify-center items-center'>\n        <p className='text-xl'>Please connect your wallet first</p>\n      </main>\n    );\n\n  return (\n    <main className='border-2 border-black rounded-sm p-8 text-center min-h-[85vh]'>\n      {isLoading && <p className='text-xl'>Loading...</p>}\n      {!isLoading && (\n        <>\n          {/* Information about the lottery */}\n          <div className='[&>*]:mb-8 mb-40'>\n            <p className='text-md'>\n              Welcome to the lottery, the manager is:\n              <span className='font-bold m-2'>{manager}</span>\n            </p>\n            <p className='text-md'>\n              Current balance is:\n              <span className='font-bold m-2'>{balance}</span>\n              ether\n            </p>\n            <p className='text-md'>\n              Players in the lottery:\n              <span className='font-bold m-2'>{players}</span>\n            </p>\n          </div>\n\n          {/* Entering players into the lottery */}\n          <div className='mb-28'>\n            <form\n              id='ether-form'\n              className='w-max mx-auto flex flex-col'\n              onSubmit={handleEnter}\n            >\n              <div>\n                <input\n                  type='number'\n                  step={0.1}\n                  min={0.1}\n                  id='ether-value'\n                  className='border-2 border-black mr-4 py-1 px-3'\n                  onChange={handleEtherChange}\n                  value={ether}\n                />\n                <label htmlFor='ether-value'>Ether</label>\n              </div>\n              <button\n                form='ether-form'\n                className='bg-black text-white my-2 py-1 font-bold uppercase'\n              >\n                Enter\n              </button>\n            </form>\n            {isEntering && <p>Entering you into the lottery...</p>}\n          </div>\n\n          {/* Picking a winner by the manager */}\n          {\n            <>\n              <button\n                className='bg-black text-white font-bold uppercase py-2 px-6'\n                onClick={handlePickWinner}\n              >\n                Pick a winner\n              </button>\n              {isPicking && <p>Picking a winner...</p>}\n            </>\n          }\n        </>\n      )}\n    </main>\n  );\n};\n\nexport default Main;\n", "export default {'version':'42fd3430','entry':{'module':'/build/entry.client-ZV7UUKUI.js','imports':['/build/_shared/chunk-WRK3KOZC.js','/build/_shared/chunk-T6XYLGM3.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-ZQ3553NZ.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-RLJJWPII.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'cssBundleHref':undefined,'hmr':undefined,'url':'/build/manifest-42FD3430.js'};", "\nimport * as entryServer from \"/home/shayan/dev/projects/lottery/client/app/entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/_index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"unstable_cssModules\":false,\"unstable_cssSideEffectImports\":false,\"unstable_dev\":false,\"unstable_postcss\":false,\"unstable_tailwind\":true,\"unstable_vanillaExtract\":false,\"v2_errorBoundary\":true,\"v2_meta\":true,\"v2_normalizeFormMethod\":true,\"v2_routeConvention\":true};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  \n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    }\n  };"],
  "mappings": "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",
  "names": ["isbot", "import_react", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "manager", "players", "balance", "import_jsx_dev_runtime", "accounts"]
}
